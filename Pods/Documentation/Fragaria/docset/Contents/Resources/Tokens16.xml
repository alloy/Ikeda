<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSString+NSStringICUAdditions.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSString(NSStringICUAdditions)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/nativeUTF16Encoding</TokenIdentifier>
			<Abstract type="html">    @method     nativeUTF16Encoding
    @abstract   The native UTF16 encoding on the given machine.
    @discussion The native UTF16 encoding on the given machine.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>+ (NSStringEncoding)nativeUTF16Encoding</Declaration>
			
			
			<Anchor>//api/name/nativeUTF16Encoding</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/stringWithICUString:</TokenIdentifier>
			<Abstract type="html">    @method     stringWithICUString:
    @abstract   Create an NSString from a UTF16 encoded string.
    @discussion Create an NSString from a UTF16 encoded string.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)stringWithICUString:(void *)utf16EncodedString</Declaration>
			
			
			<Anchor>//api/name/stringWithICUString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/UTF16String</TokenIdentifier>
			<Abstract type="html">    @method     UTF16String
    @abstract   Returns a UTF16 encoded string in the native encoding.
    @discussion This string has a retain policy equivalent to UTF8String. In
other words, if you want to keep this string around beyond the given autorelease
context, you need to copy the returned string.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>- (void *)UTF16String</Declaration>
			
			
			<Anchor>//api/name/UTF16String</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/copyUTF16String</TokenIdentifier>
			<Abstract type="html">@method     copyUTF16String
@abstract   returns a copy
@discussion Returns a UTF16 encoded string in the native encoding. The returned
buffer must eventually be freed.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>- (void *)copyUTF16String</Declaration>
			
			
			<Anchor>//api/name/copyUTF16String</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/findPattern:</TokenIdentifier>
			<Abstract type="html">    @method     findPattern:
    @abstract   Finds the given expression and and groups.
	@discussion Returns the match and any grouped matches in the returned 
	array.  The first element of the array is the entire match and subsequent
	elements are the groups in the order the matches occur.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)findPattern:(NSString *)aRegex</Declaration>
			
			
			<Anchor>//api/name/findPattern:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/componentsSeparatedByPattern:</TokenIdentifier>
			<Abstract type="html">    @method     componentsSeparatedByPattern:
    @abstract   Returns the components separated by the given pattern.
    @discussion Break a string into components where components separated
	by occurrences of the given pattern.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)componentsSeparatedByPattern:(NSString *)aRegex</Declaration>
			
			
			<Anchor>//api/name/componentsSeparatedByPattern:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/replaceOccurrencesOfPattern:withString:</TokenIdentifier>
			<Abstract type="html">    @method     replaceOccurrencesOfPattern:withString:
    @abstract   Replace occurrences of the pattern with the replacement text.
    @discussion Replace occurrences of the pattern with the replacement text.
   The replacement text may contain backrerferences.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>- (NSString *)replaceOccurrencesOfPattern:(NSString *)aPattern withString:(NSString *)replacementText</Declaration>
			
			
			<Anchor>//api/name/replaceOccurrencesOfPattern:withString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSString(NSStringICUAdditions)/matchesPattern:</TokenIdentifier>
			<Abstract type="html">    @method     matchesPattern:
    @abstract   Returns YES if the string matches the entire pattern.
    @discussion Returns YES if the string matches the entire pattern.</Abstract>
			<DeclaredIn>NSStringICUAdditions.h</DeclaredIn>			
			
			<Declaration>- (BOOL)matchesPattern:(NSString *)aRegex</Declaration>
			
			
			<Anchor>//api/name/matchesPattern:</Anchor>
		</Token>
		
	</File>
</Tokens>